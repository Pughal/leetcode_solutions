Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

 

Example 1:

Input: s = "leetcode"
Output: 0


Example 2:

Input: s = "loveleetcode"
Output: 2


Example 3:

Input: s = "aabb"
Output: -1
 

Constraints:

1 <= s.length <= 10^5
s consists of only lowercase English letters



==========================================Solution==========================================

Python

class Solution:
  def firstUniqChar(self, s: str) -> int:
    count = collections.Counter(s)

    for i, c in enumerate(s):
      if count[c] == 1:
        return i

    return -1


class Solution:
    def firstUniqChar(self, s: str) -> int:
        char_count = {}

        for char in s:
            char_count[char] = char_count.get(char, 0) + 1

        for i, char in enumerate(s):
            if char_count[char] == 1:
                return i
        return -1





TestCase 1:
Input
s =
"leetcode"
Output
0
Expected
0

TestCase 2:
Input
s =
"loveleetcode"
Output
2
Expected
2

TestCase 3:
Input
s =
"aabb"
Output
-1
Expected
-1
