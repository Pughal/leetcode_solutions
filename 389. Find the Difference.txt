You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.


Example 2:

Input: s = "", t = "y"
Output: "y"
 

Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.


=======================================Solution============================================

Python

class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
    	for i in set(t):
    		if s.count(i) != t.count(i): return i

class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        for letter in t:
            if t.count(letter) != s.count(letter):
                return letter
        

class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        # diff=Counter(t)-Counter(s)
        # return ''.join([i for i in diff.keys()])

        return chr(sum(ord(c) for c in t)-sum(ord(c) for c in s))        


class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        return chr(self.sumChars(t) - self.sumChars(s))

    def sumChars(self, s: str) -> int:
        return sum(map(ord, s))

    # def findTheDifference(self, s: str, t: str) -> str:
    #     sCounter = Counter(s)
    #     tCounter = Counter(t)
    #     diffCounter = tCounter - sCounter
    #     return list(diffCounter.keys())[0]

    # def findTheDifference(self, s: str, t: str) -> str:
    #     sCounter = Counter(s)
    #     tCounter = Counter(t)

    #     for char, totalChar in tCounter.items():
    #         isCharExist = char in sCounter
    #         isTotalCharEqual = totalChar == sCounter[char]

    #         if not isCharExist or not isTotalCharEqual:
    #             return char


TestCase 1:
Input
s =
"abcd"
t =
"abcde"
Output
"e"
Expected
"e"

TestCase 2:
Input
s =
""
t =
"y"
Output
"y"
Expected
"y"
