You are given an array of strings words and a string chars.

A string is good if it can be formed by characters from chars (each character can only be used once).

Return the sum of lengths of all good strings in words.

 

Example 1:

Input: words = ["cat","bt","hat","tree"], chars = "atach"
Output: 6
Explanation: The strings that can be formed are "cat" and "hat" so the answer is 3 + 3 = 6.


Example 2:

Input: words = ["hello","world","leetcode"], chars = "welldonehoneyr"
Output: 10
Explanation: The strings that can be formed are "hello" and "world" so the answer is 5 + 5 = 10.
 

Constraints:

1 <= words.length <= 1000
1 <= words[i].length, chars.length <= 100
words[i] and chars consist of lowercase English letters.



=================================Solution====================================

Python

class Solution:
  def countCharacters(self, words: List[str], chars: str) -> int:
    ans = 0
    count = collections.Counter(chars)

    for word in words:
      tempCount = count.copy()
      for c in word:
        tempCount[c] -= 1
        if tempCount[c] < 0:
          ans -= len(word)
          break
      ans += len(word)

    return ans


from collections import Counter as cnt
class Solution:
    def countCharacters(self, words: List[str], chars: str) -> int:
        return sum(not cnt(w) - cnt(chars) and len(w) for w in words)


class Solution:
    def countCharacters(self, words: List[str], chars: str) -> int:
        length=[]
        for i in words:
            for j in i:
                if chars.count(j) < i.count(j): 
                    break
            else:
                length.append(len(i))
        return sum(length)



TestCase 1:
Input
words =
["cat","bt","hat","tree"]
chars =
"atach"
Output
6
Expected
6

TestCase 2:
Input
words =
["hello","world","leetcode"]
chars =
"welldonehoneyr"
Output
10
Expected
10
