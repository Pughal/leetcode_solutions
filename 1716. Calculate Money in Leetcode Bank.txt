Hercy wants to save money for his first car. He puts money in the Leetcode bank every day.

He starts by putting in $1 on Monday, the first day. Every day from Tuesday to Sunday, he will put in $1 more than the day before. 
On every subsequent Monday, he will put in $1 more than the previous Monday.
Given n, return the total amount of money he will have in the Leetcode bank at the end of the nth day.

 

Example 1:

Input: n = 4
Output: 10
Explanation: After the 4th day, the total is 1 + 2 + 3 + 4 = 10.


Example 2:

Input: n = 10
Output: 37
Explanation: After the 10th day, the total is (1 + 2 + 3 + 4 + 5 + 6 + 7) + (2 + 3 + 4) = 37. Notice that on the 2nd Monday, Hercy only puts in $2.


Example 3:

Input: n = 20
Output: 96
Explanation: After the 20th day, the total is (1 + 2 + 3 + 4 + 5 + 6 + 7) + (2 + 3 + 4 + 5 + 6 + 7 + 8) + (3 + 4 + 5 + 6 + 7 + 8) = 96.
 

Constraints:

1 <= n <= 1000



===================================Solution======================================

Python

class Solution:
    def totalMoney(self, n: int) -> int:
        if n <= 7:
            return n * (n+1)//2

        weeks = n // 7
        total = weeks * 28
        # Sum of AP
        total += (weeks*(weeks-1)*7)//2

        if n % 7 != 0:
            days = n % 7
            day = weeks+1
            for j in range(days):
                total += day
                day += 1

        return total


class Solution:
    def totalMoney(self, n: int) -> int:
        s = 0
        d = 1
        b = 0
        for i in range(1,n+1):
            b = b+(s+d)
            d+=1
            if i%7==0:
                s+=1
                d=1
        return b


class Solution:
    def totalMoney(self, n: int) -> int:
        count = 0

        weeks = n//7+1

        for week in range(weeks):

            if week == weeks-1:
                for day in range(1,n%7+1):
                    count += week + day
            else:
                for day in range(1,8):
                    count += week + day

        return count
        


TestCase 1:
Input
n =
4
Output
10
Expected
10

TestCase 2:
Input
n =
10
Output
37
Expected
37

TestCase 3:
Input
n =
20
Output
96
Expected
96
