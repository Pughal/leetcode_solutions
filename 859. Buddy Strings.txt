Given two strings s and goal, return true if you can swap two letters in s so the result is equal to goal, otherwise, return false.

Swapping letters is defined as taking two indices i and j (0-indexed) such that i != j and swapping the characters at s[i] and s[j].

For example, swapping at indices 0 and 2 in "abcd" results in "cbad".
 

Example 1:

Input: s = "ab", goal = "ba"
Output: true
Explanation: You can swap s[0] = 'a' and s[1] = 'b' to get "ba", which is equal to goal.

Example 2:

Input: s = "ab", goal = "ab"
Output: false
Explanation: The only letters you can swap are s[0] = 'a' and s[1] = 'b', which results in "ba" != goal.

Example 3:

Input: s = "aa", goal = "aa"
Output: true
Explanation: You can swap s[0] = 'a' and s[1] = 'a' to get "aa", which is equal to goal.
 

Constraints:

1 <= s.length, goal.length <= 2 * 10^4
s and goal consist of lowercase letters.

=================================Solution====================================

Python

class Solution:
  def buddyStrings(self, A: str, B: str) -> bool:
    if len(A) != len(B):
      return False
    if A == B and len(set(A)) < len(A):
      return True

    diff = [(a, b) for a, b in zip(A, B) if a != b]

    return len(diff) == 2 and diff[0] == diff[1][::-1]


class Solution:
    def buddyStrings(self, s: str, goal: str) -> bool:
        len_s = len(s)
        len_g = len(goal)
        diff = []
        countdiff = 0
        if len_s != len_g:
            return False
        
        # If s==goal, check dulplicates.
        if s == goal: 
            if len(set(s)) < len_s:
                return True
            else:
                return False
            
        # If s!= goal
        for i, j in zip(s, goal):
            if i != j:
                diff.append([i,j])
                if len(diff) > 2:
                    return False
        return len(diff) == 2 and diff[0][0] == diff[1][1] and diff[0][1] == diff[1][0]
            
            

TestCase 1:
Input
s =
"ab"
goal =
"ba"
Output
true
Expected
true

TestCase 2:
Input
s =
"ab"
goal =
"ab"
Output
false
Expected
false

TestCase 3:
Input
s =
"aa"
goal =
"aa"
Output
true
Expected
true
