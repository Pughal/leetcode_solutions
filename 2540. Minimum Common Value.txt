Given two integer arrays nums1 and nums2, sorted in non-decreasing order, return the minimum integer common to both arrays. If there is no common integer amongst nums1 and nums2, return -1.

Note that an integer is said to be common to nums1 and nums2 if both arrays have at least one occurrence of that integer.

 

Example 1:

Input: nums1 = [1,2,3], nums2 = [2,4]
Output: 2
Explanation: The smallest element common to both arrays is 2, so we return 2.


Example 2:

Input: nums1 = [1,2,3,6], nums2 = [2,3,4,5]
Output: 2
Explanation: There are two common elements in the array 2 and 3 out of which 2 is the smallest, so 2 is returned.
 

Constraints:

1 <= nums1.length, nums2.length <= 10^5
1 <= nums1[i], nums2[j] <= 10^9
Both nums1 and nums2 are sorted in non-decreasing order.



=======================================Solution=======================================

Python


class Solution:
  def getCommon(self, nums1: List[int], nums2: List[int]) -> int:
    i = 0  # nums1's index
    j = 0  # nums2's index

    while i < len(nums1) and j < len(nums2):
      if nums1[i] == nums2[j]:
        return nums1[i]
      if nums1[i] < nums2[j]:
        i += 1
      else:
        j += 1

    return -1



class Solution:
    def getCommon(self, nums1: List[int], nums2: List[int]) -> int:
        index1 = index2 = 0
        length1, length2 = len(nums1), len(nums2)
        while index1 < length1 and index2 < length2:
            if nums1[index1] == nums2[index2]:
                return nums1[index1]
            if nums1[index1] < nums2[index2]:
                index1 += 1
            else:
                index2 += 1
        return -1


class Solution:
    def getCommon(self, nums1, nums2):
        len2 = len(nums2)
        for num in nums1:
            left, right = 0, len2 - 1
            while left <= right:
                mid = left + (right - left) // 2
                print(left, right, mid)
                if nums2[mid] > num:
                    right = mid - 1
                elif nums2[mid] < num:
                    left = mid + 1
                else:
                    return num
        return -1



TestCase 1:
Input
nums1 =
[1,2,3]
nums2 =
[2,4]
Output
2
Expected
2


TestCase 2:
Input
nums1 =
[1,2,3,6]
nums2 =
[2,3,4,5]
Output
2
Expected
2
