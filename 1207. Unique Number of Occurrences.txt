Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.

 

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.


Example 2:

Input: arr = [1,2]
Output: false


Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
 

Constraints:

1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000



===================================Solution======================================

Python

class Solution:
  def uniqueOccurrences(self, arr: List[int]) -> bool:
    count = collections.Counter(arr)
    occurrences = set()

    for value in count.values():
      if value in occurrences:
        return False
      occurrences.add(value)

    return True


class Solution:
    def uniqueOccurrences(self, arr: List[int]) -> bool:
        return len(set(Counter(arr).values()))==len(Counter(arr).values())


class Solution:
    def uniqueOccurrences(self, arr: List[int]) -> bool:
        s = {}

        for i in range(len(arr)):
            if arr[i] in s:
                s[arr[i]] += 1
            else:
                s[arr[i]] = 1

        r = set()
        for key in s:
            if s[key] in r:
                return False
            r.add(s[key])

        return True

TestCase 1:
Input
arr =
[1,2,2,1,1,3]
Output
true
Expected
true

TestCase 2:
Input
arr =
[1,2]
Output
false
Expected
false

TestCase 3:
Input
arr =
[-3,0,1,-3,1,1,1,-3,10,0]
Output
true
Expected
true
