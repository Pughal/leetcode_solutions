You are given a string s consisting only of the characters '0' and '1'. In one operation, you can change any '0' to '1' or vice versa.

The string is called alternating if no two adjacent characters are equal. For example, the string "010" is alternating, while the string "0100" is not.

Return the minimum number of operations needed to make s alternating.

 

Example 1:

Input: s = "0100"
Output: 1
Explanation: If you change the last character to '1', s will be "0101", which is alternating.


Example 2:

Input: s = "10"
Output: 0
Explanation: s is already alternating.


Example 3:

Input: s = "1111"
Output: 2
Explanation: You need two operations to reach "0101" or "1010".
 

Constraints:

1 <= s.length <= 10^4
s[i] is either '0' or '1'.



===================================Solution=====================================

Python

class Solution:
  def minOperations(self, s: str) -> int:
    cost10 = sum(int(c) == i % 2 for i, c in enumerate(s))
    cost01 = len(s) - cost10
    return min(cost10, cost01)

class Solution:
    # def countOperations(self, s, current):
    #     count = 0
    #     for ch in s:
    #         if ch != current:
    #             count+=1
    #         current = "1" if current == "0" else "0"
    #     return count 

    def minOperations(self, s: str) -> int:
        start0 = "0"
        start1 = "1"
        count0 = 0
        count1 = 0
        for ch in s:
            if ch != start1:
                count1 += 1
            else:
                count0 += 1

            start1, start0 = start0, start1
        return min(count0, count1)


class Solution:
    def minOperations(self, s: str) -> int:
        start0 = 0
        start1 = 0
        
        for i in range(len(s)):
            if i % 2 == 0:
                if s[i] == "0":
                    start1 += 1
                else:
                    start0 += 1
            else:
                if s[i] == "1":
                    start1 += 1
                else:
                    start0 += 1
        
        return min(start0, start1)



TestCase 1:
Input
s =
"0100"
Output
1
Expected
1

TestCase 2:
Input
s =
"10"
Output
0
Expected
0

TestCase 3:
Input
s =
"1111"
Output
2
Expected
2
