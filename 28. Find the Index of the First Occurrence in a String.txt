Given two strings needle and haystack, 
return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.

 

Example 1:

Input: haystack = "sadbutsad", needle = "sad"
Output: 0
Explanation: "sad" occurs at index 0 and 6.
The first occurrence is at index 0, so we return 0.

Example 2:

Input: haystack = "leetcode", needle = "leeto"
Output: -1
Explanation: "leeto" did not occur in "leetcode", so we return -1.
 

Constraints:

1 <= haystack.length, needle.length <= 10^4
haystack and needle consist of only lowercase English characters.


--------------------------------------Solution--------------------------------------------

Python


class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        if needle not in haystack:
            return -1
        return haystack.index(needle)

        # m = len(haystack)
        # n = len(needle)

        # for i in range(m - n + 1):
        #     if haystack[i: i+n] == needle:
        #         return i
        # return -1

if __name__ == "__main__":
    haystack = "sadbutsad"
    needle = "sad"
    soln = Solution()
    print(soln.strStr(haystack, needle))
    
    
TestCase 1:
Input:
haystack = "sadbutsad"
needle = "sad"
Output:
0
Expected:
0

TestCase 2:
Input:
haystack = "leetcode"
needle = "leeto"
Output:
-1
Expected:
-1


