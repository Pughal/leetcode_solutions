Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.


Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false
 
Constraints:

1 <= pattern.length <= 300
pattern contains only lower-case English letters.
1 <= s.length <= 3000
s contains only lowercase English letters and spaces ' '.
s does not contain any leading or trailing spaces.
All the words in s are separated by a single space.


--------------- Solution ---------------
Python

class Solution(object):
    def wordPattern(self, pattern, s):
        """
        :type pattern: str
        :type s: str
        :rtype: bool
        """
        if pattern == None or s == None:
            return False
        else:
            str = s.split()
            len_str = len(str)
            len_pattern = len(pattern)
            if len_pattern != len_str:
                return False
            lookup = {}
            for i in range(0, len_pattern):
                word = str[i]
                p = pattern[i]
                if p in lookup:
                    if lookup[p] != word:
                        return False
                else:
                    if word in lookup.values():
                        return False
                    lookup[p] = word
            return True

if __name__ == "__main__":

    pattern = "abba"
    str = "dog cat cat dog"
    soln = Solution()
    print(soln.wordPattern(pattern, str))


TestCase 1:
Input:
pattern ="abba"
s ="dog cat cat dog"
Output:
true
Expected:
true

TestCase 2:
Input:
pattern ="abba"
s ="dog cat cat fish"
Output:
false
Expected:
false

TestCase 3:
Input:
pattern ="aaaa"
s ="dog cat cat dog"
Output:
false
Expected:
false
