You are given an array of strings names, and an array heights that consists of distinct positive integers. Both arrays are of length n.

For each index i, names[i] and heights[i] denote the name and height of the ith person.

Return names sorted in descending order by the people's heights.

 

Example 1:

Input: names = ["Mary","John","Emma"], heights = [180,165,170]
Output: ["Mary","Emma","John"]
Explanation: Mary is the tallest, followed by Emma and John.


Example 2:

Input: names = ["Alice","Bob","Bob"], heights = [155,185,150]
Output: ["Bob","Alice","Bob"]
Explanation: The first Bob is the tallest, followed by Alice and the second Bob.
 

Constraints:

n == names.length == heights.length
1 <= n <= 10^3
1 <= names[i].length <= 20
1 <= heights[i] <= 10^5
names[i] consists of lower and upper case English letters.
All the values of heights are distinct.



==============================Solution==================================

Python

class Solution:
  def sortPeople(self, names: List[str], heights: List[int]) -> List[str]:
    return [height for _, height in
            sorted([(height, name) for name, height in zip(names, heights)], reverse=True)]

class Solution:
    def sortPeople(self, names: List[str], heights: List[int]) -> List[str]:
        return[name for _, name in sorted(zip(heights, names), reverse = True)]

class Solution:
    def sortPeople(self, names: List[str], heights: List[int]) -> List[str]:
        l = heights
        l = sorted(l, reverse = True)
        result = []
        for i in range(len(l)):
            result.append(names[heights.index(l[i])])
        return result


class Solution:
    def sortPeople(self, names: List[str], heights: List[int]) -> List[str]:
        lst = zip(heights, names)
        n_lst = []
        for h, n in sorted(lst, reverse=True):
            n_lst.append(n)

        return n_lst

        




        


TestCase 1:
Input
names =
["Mary","John","Emma"]
heights =
[180,165,170]
Output
["Mary","Emma","John"]
Expected
["Mary","Emma","John"]


TestCase 2:
Input
names =
["Alice","Bob","Bob"]
heights =
[155,185,150]
Output
["Bob","Alice","Bob"]
Expected
["Bob","Alice","Bob"]
