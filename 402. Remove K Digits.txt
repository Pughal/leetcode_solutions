Given string num representing a non-negative integer num, and an integer k, return the smallest possible integer after removing k digits from num.

 

Example 1:

Input: num = "1432219", k = 3
Output: "1219"
Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.


Example 2:

Input: num = "10200", k = 1
Output: "200"
Explanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.


Example 3:

Input: num = "10", k = 2
Output: "0"
Explanation: Remove all the digits from the number and it is left with nothing which is 0.
 

Constraints:

1 <= k <= num.length <= 10^5
num consists of only digits.
num does not have any leading zeros except for the zero itself.



===============================Solution=====================================

Python

class Solution:
  def removeKdigits(self, num: str, k: int) -> str:
    if len(num) == k:
      return '0'

    ans = []
    stack = []

    for i, digit in enumerate(num):
      while k > 0 and stack and stack[-1] > digit:
        stack.pop()
        k -= 1
      stack.append(digit)

    for _ in range(k):
      stack.pop()

    for c in stack:
      if c == '0' and not ans:
        continue
      ans.append(c)

    return ''.join(ans) if ans else '0'



class Solution:
    def removeKdigits(self, number: str, k: int) -> str:
        # Create a stack to hold the number
        stack = []

        # Add number to stack
        for digit in number:
            if len(stack) == 1 and stack[-1] == "0":
                stack.pop()

            while len(stack) > 0 and k > 0 and int(stack[-1]) > int(digit):
                stack.pop()
                k -= 1

            stack.append(digit)

        # Check if k > 0
        if k > 0:
            stack = stack[:-k]

        # Check if stack has any more elements
        if len(stack) == 0:
            return "0"

        return "".join(stack)



TestCase 1:
Input
num =
"1432219"
k =
3
Output
"1219"
Expected
"1219"

TestCase 2:
Input
num =
"10200"
k =
1
Output
"200"
Expected
"200"

TestCase 3:
Input
num =
"10"
k =
2
Output
"0"
Expected
"0"
