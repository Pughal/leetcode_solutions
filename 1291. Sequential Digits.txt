An integer has sequential digits if and only if each digit in the number is one more than the previous digit.

Return a sorted list of all the integers in the range [low, high] inclusive that have sequential digits.

 

Example 1:

Input: low = 100, high = 300
Output: [123,234]


Example 2:

Input: low = 1000, high = 13000
Output: [1234,2345,3456,4567,5678,6789,12345]
 

Constraints:

10 <= low <= high <= 10^9



=======================================Solution==========================================

Python

class Solution:
    def sequentialDigits(self, low, high):
        ans = []

        for i in range(1, 10):
            num = i
            next_digit = i + 1

            while num <= high and next_digit <= 9:
                num = num * 10 + next_digit
                if low <= num <= high:
                    ans.append(num)
                next_digit += 1

        ans.sort()
        return ans


class Solution:
    def sequentialDigits(self, low: int, high: int) -> List[int]:
        sample = "123456789"
        n = 10
        res = []
        for i in range(len(str(low)), len(str(high))+1):
            for start in range(n-i):
                num = int(sample[start:start+i])
                if low<=num<=high:
                    res.append(num)
        return res
        


TestCase 1:
Input
low =
100
high =
300
Output
[123,234]
Expected
[123,234]

TestCase 2:
Input
low =
1000
high =
13000
Output
[1234,2345,3456,4567,5678,6789,12345]
Expected
[1234,2345,3456,4567,5678,6789,12345]
